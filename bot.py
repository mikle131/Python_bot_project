from game import Game
import telebot
from telebot import types
import sqlite3

TOKEN = '5461356135:AAGR6NZs0TX7HM7t_1wdEq6b8vXPmnP3dAs'
bot = telebot.TeleBot(TOKEN)

registered_users = []  # –ª–µ–≥–∞—Å–∏
enter_nick = dict()  # –ª–µ–≥–∞—Å–∏

# –ö–Ω–æ–ø–æ—á–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
main_menu_markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                             row_width=2,
                                             one_time_keyboard=True)
my_account = types.KeyboardButton("–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç")
go_game = types.KeyboardButton("–ù–æ–≤–∞—è –∏–≥—Ä–∞")
rules = types.KeyboardButton("–ü—Ä–∞–≤–∏–ª–∞")
main_menu_markup.add(my_account)
main_menu_markup.add(go_game)
main_menu_markup.add(rules)

# –ö–Ω–æ–ø–æ—á–∫–∏ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
account_markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                           row_width=2,
                                           one_time_keyboard=True)
go_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
get_money = types.KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –±–∞–±–∫–∏")
account_markup.add(go_main)
account_markup.add(get_money)

# –ö–Ω–æ–ø–æ—á–∫–∏ —Å—Ç–∞–≤–æ–∫
bet_markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                       row_width=2,
                                       one_time_keyboard=True)
st_150 = types.KeyboardButton("150üí≤")
st_300 = types.KeyboardButton("300üí≤")
st_500 = types.KeyboardButton("500üí≤")
st_1000 = types.KeyboardButton("1000üí≤")
go_main = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
bet_markup.add(st_150)
bet_markup.add(st_300)
bet_markup.add(st_500)
bet_markup.add(st_1000)
bet_markup.add(go_main)

# –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ö–æ–¥—è—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
heat = types.KeyboardButton("–í–∑—è—Ç—å")
stay = types.KeyboardButton("–ü–∞—Å")
give_up = types.KeyboardButton("–°–¥–∞—Ç—å—Å—è")
first_player_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
first_player_markup.add(heat)
first_player_markup.add(stay)
first_player_markup.add(give_up)

# –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ö–æ–¥—è—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
give_up = types.KeyboardButton("–°–¥–∞—Ç—å—Å—è")
second_player_markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
second_player_markup.add(give_up)

cancel_searching = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                             row_width=2,
                                             one_time_keyboard=True)
canc = types.KeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫")
cancel_searching.add(canc)

is_searching = dict()
searching_users_id = {150: [], 300: [], 500: [], 1000: []}
games = dict()
game_id_counter = 1


def account_stat(user, cur):
    cur.execute(f"select nickname from users where telegram_uid = {user}")
    nn = cur.fetchone()[0]
    cur.execute(f"select balance from users where telegram_uid = {user}")
    balance = cur.fetchone()[0]
    message = f"""
–ù–∏–∫: {nn}
–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä:
–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥:
–ë–∞–ª–∞–Ω—Å: {balance}
    """
    return message


rules = '''–¢–µ–∫—Å—Ç-–∑–∞–≥–ª—É—à–∫–∞'''


def connect_db():
    """–°–æ–µ–¥–∏–Ω—è–µ—Ç —Å –±–¥"""
    rv = sqlite3.connect('users.db')
    rv.row_factory = sqlite3.Row
    return rv


@bot.message_handler(commands=['start'])
def hello_message(message):
    db = connect_db()
    cur = db.cursor()
    cur.execute(
        f"select nickname from users where telegram_uid = {message.chat.id}")
    try:
        nn = cur.fetchone()[0]
    except:
        nn = ''
    if nn != '':
        bot.send_message(
            message.chat.id,
            '–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç! –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∞–Ω). –í—ã–±–µ—Ä–∏ —Ç–æ, —á—Ç–æ —Ç–µ–±–µ –Ω–∞–¥–æ',
            reply_markup=main_menu_markup)
    else:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                           row_width=2,
                                           one_time_keyboard=True)
        first_message = '–ü—Ä–∏–≤–µ—Ç, ' + message.from_user.username + '!üëãüèº' + 2 * '\n' + '–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è. –≠—Ç–æ –±—ã—Å—Ç—Ä–æüìù'
        bot.send_message(message.chat.id, first_message)
        question = '–ü—Ä–∏–¥—É–º–∞–π —Å–≤–æ–π –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º'
        bot.send_message(message.chat.id, question)
        cur.execute(
            f"update users set chat_state = 0 where telegram_uid = {message.chat.id}"
        )
        db.commit()
    db.close()


@bot.message_handler(content_types=['text'])
def message_reply(message):
    global game_id_counter
    db = connect_db()
    cur = db.cursor()

    cur.execute(
        f"select nickname from users where telegram_uid = {message.chat.id}")

    try:
        nn = cur.fetchone()[0]
    except:
        nn = ''

    cur.execute(
        f"select chat_state from users where telegram_uid = {message.chat.id}")

    try:
        state = cur.fetchone()[0]
    except:
        state = -1

    cur.execute(f"select game_id from users where telegram_uid = {message.chat.id}")

    try:
        player_game_id = cur.fetchone()[0]
    except:
        player_game_id = 0

    def game_finder(bet):
        global game_id_counter
        cur.execute(
            f"select balance from users where telegram_uid = {message.chat.id}")
        balance = cur.fetchone()[0]
        if balance < bet:
            bot.send_message(message.chat.id,
                             '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–æ–Ω–µ—Ç',
                             reply_markup=bet_markup)
            return 1
        else:
            searching_users_id[bet].append(message.chat.id)
            is_searching[message.chat.id] = bet
            bot.send_message(message.chat.id,
                             '–ü–æ–∏—Å–∫ –∏–≥—Ä—ã',
                             reply_markup=cancel_searching)
        if len(searching_users_id[bet]) >= 2:
            id_1 = searching_users_id[bet].pop()
            id_2 = searching_users_id[bet].pop()
            g = Game(id_1, id_2, bet)
            cur.execute(
                f"update users set game_id = {game_id_counter} where telegram_uid = {id_1}"
            )
            cur.execute(
                f"update users set game_id = {game_id_counter} where telegram_uid = {id_2}"
            )
            db.commit()
            cur.execute(f"select nickname from users where telegram_uid={id_1}")
            nn_1 = cur.fetchone()[0]
            cur.execute(f"select nickname from users where telegram_uid={id_2}")
            nn_2 = cur.fetchone()[0]
            bot.send_message(id_1, f'–ò–≥—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞. –í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: {nn_2}')
            bot.send_message(id_1, f'–í–∞—à —Ö–æ–¥', reply_markup=first_player_markup)
            bot.send_message(id_2, f'–ò–≥—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞. –í–∞—à –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫: {nn_1}')
            bot.send_message(id_2, f'–•–æ–¥ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞', reply_markup=second_player_markup)
            games[game_id_counter] = g
            game_id_counter += 1

    if nn == '' and state == -1:
        go_start = types.ReplyKeyboardMarkup(resize_keyboard=True,
                                             row_width=2,
                                             one_time_keyboard=True)
        start = types.KeyboardButton("/start")
        go_start.add(start)
        cur.execute(
            f"select count(*) from users where telegram_uid = {message.chat.id}")
        num = cur.fetchone()[0]
        if num < 1:
            cur.execute(
                "insert into users (telegram_uid, nickname, balance, chat_state, game_id) values (?, ?, ?, ?, ?)",
                (f'{message.chat.id}', f'', 0, -1, 0))
            db.commit()
        bot.send_message(
            message.chat.id,
            '–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /start',
            reply_markup=go_start)

    elif state == 0:
        nn = message.text
        enter_nick[message.chat.id] = 1  # –ª–µ–≥–∞—Å–∏
        registered_users.append(message.chat.id)  # –ª–µ–≥–∞—Å–∏
        # –¥–æ–±–∞–≤–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –≤ –±–¥
        cur.execute(
            f"update users set nickname = '{nn}' where telegram_uid = {message.chat.id}"
        )
        cur.execute(
            f"update users set chat_state = 1 where telegram_uid = {message.chat.id}"
        )
        db.commit()
        bot.send_message(message.chat.id,
                         '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è! –¢—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é',
                         reply_markup=main_menu_markup)

    elif (player_game_id != 0):
        game = games[player_game_id]
        if message.text == '–°–¥–∞—Ç—å—Å—è':
            loser = message.chat.id
            if loser == game.user_1:
                winner = game.user_2
            else:
                winner = game.user_1
            bot.send_message(loser, f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –°–æ —Å—á—ë—Ç–∞ —Å–ø–∏—Å–∞–Ω–æ {game.bet} –º–æ–Ω–µ—Ç', reply_markup=main_menu_markup)
            # cur.execute(f"select balance from users where telegram_uid = {loser}")
            cur.execute(f"update users set balance = balance - {game.bet} where telegram_uid = {loser}")
            bot.send_message(winner, f'–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫ —Å–¥–∞–ª—Å—è. –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –ù–∞ —Å—á–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–æ {game.bet} –º–æ–Ω–µ—Ç', reply_markup=main_menu_markup)
            cur.execute(f"update users set balance = balance + {game.bet} where telegram_uid = {winner}")
            cur.execute(f"update users set game_id = 0 where telegram_uid = {winner}")
            cur.execute(f"update users set game_id = 0 where telegram_uid = {loser}")
            db.commit()


    elif message.text == '–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç':
        stat = account_stat(message.chat.id, cur)  # –æ—Ç —é–∑–µ—Ä–∞
        bot.send_message(message.chat.id, stat, reply_markup=account_markup)

    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id,
                         '–ü–µ—Ä–µ—Ö–æ–∂—É –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=main_menu_markup)

    elif message.text == '–ü–æ–ª—É—á–∏—Ç—å –±–∞–±–∫–∏':
        cur.execute(
            f"select balance from users where telegram_uid = {message.chat.id}")
        bal = cur.fetchone()[0]
        if bal < 150:  # –ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–∞–∫–æ–π-—Ç–æ —Å—É–º–º—ã
            cur.execute(
                f"update users set balance = balance + 300 where telegram_uid = {message.chat.id}"
            )
            db.commit()
            bot.send_message(message.chat.id,
                             '–¢–≤–æ–π –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ 300 –∫–æ–∏–Ω–æ–≤',
                             reply_markup=account_markup)
        else:
            bot.send_message(
                message.chat.id,
                '–£–ø—Å... –¢–≤–æ–π –±–∞–ª–∞–Ω—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –≤—ã—à–µ 150 –º–æ–Ω–µ—Ç ‚òπÔ∏è',
                reply_markup=account_markup)

    elif message.text == '–ü—Ä–∞–≤–∏–ª–∞':
        bot.send_message(message.chat.id, rules, reply_markup=main_menu_markup)

    elif message.text == '–ù–æ–≤–∞—è –∏–≥—Ä–∞':
        is_searching[message.chat.id] = 1
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å—Ç–∞–≤–∫—É', reply_markup=bet_markup)

    elif message.text == '150üí≤' and is_searching.get(message.chat.id,
                                                     False) == 1:
        game_finder(150)

    elif message.text == '300üí≤' and is_searching.get(message.chat.id,
                                                     False) == 1:
        game_finder(300)

    elif message.text == '500üí≤' and is_searching.get(message.chat.id,
                                                     False) == 1:
        game_finder(500)

    elif message.text == '1000üí≤' and is_searching.get(message.chat.id,
                                                      False) == 1:
        game_finder(1000)

    elif message.text == '–û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫':
        if is_searching.get(message.chat.id, False):
            bet = is_searching[message.chat.id]
            searching_users_id[bet].remove(message.chat.id)
            is_searching[message.chat.id] = -1
            bot.send_message(message.chat.id,
                             '–ü–æ–∏—Å–∫ –æ—Ç–º–µ–Ω–µ–Ω',
                             reply_markup=main_menu_markup)
        else:
            bot.send_message(message.chat.id,
                             '–í—ã –Ω–µ –≤ –ø–æ–∏—Å–∫–µ',
                             reply_markup=main_menu_markup)
    else:
        bot.send_message(
            message.chat.id,
            '–£–ø—Å, —Ç–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å, —Ç–∞–ø–Ω–∏ –ø–æ –∫–Ω–æ–ø–æ—á–∫–µ "–ù–æ–≤–∞—è –∏–≥—Ä–∞"',
            reply_markup=main_menu_markup)

    db.close()


if __name__ == '__main__':
    db = connect_db()
    cur = db.cursor()
    cur.execute("update users set game_id = 0")
    db.commit()
    db.close()
    bot.polling(none_stop=True, interval=0)
